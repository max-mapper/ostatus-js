h1. ostatus-js: an attempt to implement OStatus in JavaScript:

p. OStatus consists of the following protocols:

* "PubSubHubbub":http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html
* "Atom":http://www.atomenabled.org/developers/protocol/atom-protocol-spec.php
* "RSS":http://cyber.law.harvard.edu/rss/rss.html
* "Salmon":http://salmon-protocol.googlecode.com/svn/trunk/draft-panzer-salmon-00.html
* "ActivityStreams":http://activitystrea.ms/
* "WebFinger":http://code.google.com/p/webfinger/wiki/WebFingerProtocol

!http://imgur.com/tdpfH.png!

h1. How much is done?

* @xrd.js@ is an exploration of using E4X to generate an XRD. Ultimately this approach is too complicated.
* ATOM and XRD parsers from banksean's "node-webfinger":http://github.com/banksean/node-webfinger

p. The rest of the OStatus protocols still need to be implemented. If you have feedback or ideas please use the "Wiki":http://github.com/maxogden/ostatus-js/wiki

h1. How to contribute

p. Pick a protocol and try to write a CommonJS module to emulate the protocol. Let's take WebFinger as an example:

p. WebFinger requires that your server respond to a certain URL with a certain XML blob called an XRD, so if you @curl http://gmail.com/.well-known/host-meta@ you will receive:

<pre><code>
  <?xml version='1.0' encoding='UTF-8'?>
  <XRD xmlns='http://docs.oasis-open.org/ns/xri/xrd-1.0' 
       xmlns:hm='http://host-meta.net/xrd/1.0'>
    <hm:Host xmlns='http://host-meta.net/xrd/1.0'>gmail.com</hm:Host>
    <Link rel='lrdd' 
          template='http://www.google.com/s2/webfinger/?q={uri}'>
      <Title>Resource Descriptor</Title>
    </Link>
  </XRD>
</code></pre>

p. @xrd.js@ in this repository can generate the above XRD by creating the XML using E4X. Another approach would be to use XML templates to 'fill in the blanks' and emit valid XML feeds.

p. Ideally this will support the XML heavy OStatus as well as JSON alternatives to the individual OStatus XML protocols, such as "JRD":http://hueniverse.com/2010/05/jrd-the-other-resource-descriptor/, the JSON version of XRD.

h1. Why?

p. CommonJS compatible JavaScript servers like CouchDB would be awesome if they could talk OStatus!

p. These protocols are being built in order to power another project of mine, "couchappspora":http://github.com/maxogden/couchappspora.

p. For more info you can read about the "federated social web":http://status.net/2010/07/13/what-is-the-federated-social-web and check out their "wiki":http://federatedsocialweb.net/wiki/Main_Page

h1. How to use!

p. CouchDB example (as a CouchDB 'show' view) of how to implement WebFinger discovery!

<pre><code>
function(head, req) {
  var xrd = require("/path/to/xrd");
  return {
    "headers" : {"Content-Type" : "application/xml"},
    "body" : xrd.generate('example.com').toXMLString()
  }
}
</code></pre>

h1. License

The MIT License

Copyright (c) 2010 Max Ogden

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.